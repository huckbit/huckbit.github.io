I"¸<p>How to create an autoloader using composer?</p>

<p>Create a new file composer.json in the main folder and insert the just curly brackets</p>
<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>

<span class="p">}</span>
</code></pre></div></div>
<p>Run, to generate the autoload structure :</p>
<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">$</span> <span class="nx">composer</span> <span class="nx">install</span>
<span class="nx">update</span> <span class="nx">composer</span><span class="o">.</span><span class="nx">json</span> <span class="nx">with</span> <span class="nx">the</span> <span class="nx">psr</span><span class="o">-</span><span class="mi">4</span> <span class="nx">specification</span><span class="o">:</span>
<span class="p">{</span>
  <span class="s2">"autoload"</span> <span class="o">:</span> <span class="p">{</span>
      <span class="s2">"psr-4"</span><span class="o">:</span> <span class="p">{</span>
              <span class="s2">"Acme</span><span class="se">\\</span><span class="s2">"</span> <span class="o">:</span> <span class="s2">"src"</span>
      <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<p>Acme is a example of Company/Project name, and src is the directory that contains all the files we want include in our project.</p>

<p>Run, to generate the psr-4 autoload file, the command:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>composer dump-autoload
</code></pre></div></div>

<p>The content of the file will be the following one:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="c1">// autoload_psr4.php @generated by Composer</span>

<span class="nv">$vendorDir</span> <span class="o">=</span> <span class="nb">dirname</span><span class="p">(</span><span class="nb">dirname</span><span class="p">(</span><span class="k">__FILE__</span><span class="p">));</span>
<span class="nv">$baseDir</span> <span class="o">=</span> <span class="nb">dirname</span><span class="p">(</span><span class="nv">$vendorDir</span><span class="p">);</span>

<span class="k">return</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">'Acme\\'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="nv">$baseDir</span> <span class="o">.</span> <span class="s1">'/src'</span><span class="p">),</span>
<span class="p">);</span>
<span class="k">Require</span> <span class="nx">the</span> <span class="nb">file</span> <span class="nx">autoload</span><span class="o">.</span><span class="nx">php</span> <span class="nx">in</span> <span class="nx">your</span> <span class="nb">main</span> <span class="nx">project</span> <span class="nb">file</span> <span class="p">(</span><span class="nx">e</span><span class="o">.</span><span class="nx">g</span><span class="o">.:</span> <span class="nx">index</span><span class="o">.</span><span class="nx">php</span><span class="p">)</span><span class="o">:</span>
<span class="k">require</span> <span class="s1">'vendor/autoload.php'</span><span class="p">;</span>
</code></pre></div></div>

<p>Use namespaces Acme in your project for the file not in subfolder but just in src: So for example if you have the class Test.php in src you just need to use this.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//Test.php</span>
<span class="kn">namespace</span> <span class="nn">Acme</span><span class="p">;</span> <span class="c1">//in your class called Test</span>

<span class="kd">class</span> <span class="nc">Test</span>
<span class="p">{</span>

<span class="p">}</span>

<span class="c1">//index.php</span>
<span class="kn">use</span> <span class="nn">Acme\Test</span><span class="p">;</span> <span class="c1">//to use the class Test</span>
</code></pre></div></div>

<p>You donâ€™t need to use src in your namespace because the autoload has the $basedir on src.</p>

<p>The general rule isÂ Â»&gt; what is inside the namespace + Class Name</p>

<p>So for example if you have the folder User in src for the class Person:</p>

<p>You must have the following code structure:</p>

<p>Class Person.php in src/User/:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="kn">namespace</span> <span class="nn">Acme\User</span><span class="p">;</span> <span class="c1">//Use Acme + User</span>

<span class="kd">class</span> <span class="nc">Person</span>   <span class="p">{</span>
<span class="k">protected</span> <span class="nv">$name</span><span class="p">;</span>

<span class="cd">/**
 * @return name
 */</span>
<span class="k">public</span> <span class="k">function</span> <span class="nf">getName</span><span class="p">()</span><span class="o">:</span> <span class="kt">string</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">setName</span><span class="p">(</span><span class="kt">string</span> <span class="nv">$name</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">name</span> <span class="o">=</span> <span class="nv">$name</span><span class="p">;</span>
    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">;</span>
<span class="p">}</span> <span class="p">}</span> <span class="nx">index</span><span class="o">.</span><span class="nx">php</span><span class="o">:</span>

<span class="o">&lt;?</span><span class="nx">php</span>

<span class="k">require</span> <span class="s1">'vendor/autoload.php'</span><span class="p">;</span>

<span class="kn">use</span> <span class="nn">Acme\User\Person</span><span class="p">;</span> <span class="c1">//Use the namespace + the class name</span>

<span class="nv">$person1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">();</span>
<span class="nv">$person1</span><span class="o">-&gt;</span><span class="na">setName</span><span class="p">(</span><span class="s1">'John Doe'</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$person1</span><span class="o">-&gt;</span><span class="na">getName</span><span class="p">();</span>
</code></pre></div></div>
:ET